// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class EventBind extends ethereum.Event {
  get params(): EventBind__Params {
    return new EventBind__Params(this);
  }
}

export class EventBind__Params {
  _event: EventBind;

  constructor(event: EventBind) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get platform(): string {
    return this._event.parameters[1].value.toString();
  }

  get id(): string {
    return this._event.parameters[2].value.toString();
  }

  get uri(): string {
    return this._event.parameters[3].value.toString();
  }
}

export class EventClaimReward extends ethereum.Event {
  get params(): EventClaimReward__Params {
    return new EventClaimReward__Params(this);
  }
}

export class EventClaimReward__Params {
  _event: EventClaimReward;

  constructor(event: EventClaimReward) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get week(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get reward(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class EventVote extends ethereum.Event {
  get params(): EventVote__Params {
    return new EventVote__Params(this);
  }
}

export class EventVote__Params {
  _event: EventVote;

  constructor(event: EventVote) {
    this._event = event;
  }

  get voter(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get subject(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get isVote(): boolean {
    return this._event.parameters[2].value.toBoolean();
  }

  get amount(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get value(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get supply(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }
}

export class Initialized extends ethereum.Event {
  get params(): Initialized__Params {
    return new Initialized__Params(this);
  }
}

export class Initialized__Params {
  _event: Initialized;

  constructor(event: Initialized) {
    this._event = event;
  }

  get version(): i32 {
    return this._event.parameters[0].value.toI32();
  }
}

export class NewRewardDistribution extends ethereum.Event {
  get params(): NewRewardDistribution__Params {
    return new NewRewardDistribution__Params(this);
  }
}

export class NewRewardDistribution__Params {
  _event: NewRewardDistribution;

  constructor(event: NewRewardDistribution) {
    this._event = event;
  }

  get _team(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get _artist(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get _daily(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get _subject(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class NewSubject extends ethereum.Event {
  get params(): NewSubject__Params {
    return new NewSubject__Params(this);
  }
}

export class NewSubject__Params {
  _event: NewSubject;

  constructor(event: NewSubject) {
    this._event = event;
  }

  get owner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get subject(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get name(): string {
    return this._event.parameters[2].value.toString();
  }

  get image(): string {
    return this._event.parameters[3].value.toString();
  }

  get uri(): string {
    return this._event.parameters[4].value.toString();
  }
}

export class NewVote extends ethereum.Event {
  get params(): NewVote__Params {
    return new NewVote__Params(this);
  }
}

export class NewVote__Params {
  _event: NewVote;

  constructor(event: NewVote) {
    this._event = event;
  }

  get from(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get to(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get dailyRewardAmount(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get subjectPoolRewardAmount(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get teamRewardAmount(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get artistRewardAmount(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }

  get seq(): BigInt {
    return this._event.parameters[7].value.toBigInt();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class RiffianBoard__getSocialsResult_socialsStruct extends ethereum.Tuple {
  get platform(): string {
    return this[0].toString();
  }

  get id(): string {
    return this[1].toString();
  }

  get uri(): string {
    return this[2].toString();
  }
}

export class RiffianBoard__getVotePriceWithFeeResult {
  value0: BigInt;
  value1: BigInt;
  value2: BigInt;
  value3: BigInt;
  value4: BigInt;
  value5: BigInt;

  constructor(
    value0: BigInt,
    value1: BigInt,
    value2: BigInt,
    value3: BigInt,
    value4: BigInt,
    value5: BigInt
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    map.set("value4", ethereum.Value.fromUnsignedBigInt(this.value4));
    map.set("value5", ethereum.Value.fromUnsignedBigInt(this.value5));
    return map;
  }

  get_sum(): BigInt {
    return this.value0;
  }

  get_price(): BigInt {
    return this.value1;
  }

  get_protocolFee(): BigInt {
    return this.value2;
  }

  get_subjectFee(): BigInt {
    return this.value3;
  }

  get_agentFee(): BigInt {
    return this.value4;
  }

  get_boardFee(): BigInt {
    return this.value5;
  }
}

export class RiffianBoard__socialPlatformResult {
  value0: string;
  value1: string;
  value2: string;

  constructor(value0: string, value1: string, value2: string) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromString(this.value0));
    map.set("value1", ethereum.Value.fromString(this.value1));
    map.set("value2", ethereum.Value.fromString(this.value2));
    return map;
  }

  getPlatform(): string {
    return this.value0;
  }

  getId(): string {
    return this.value1;
  }

  getUri(): string {
    return this.value2;
  }
}

export class RiffianBoard__subjectToDataResult {
  value0: Address;
  value1: string;
  value2: string;
  value3: string;
  value4: BigInt;

  constructor(
    value0: Address,
    value1: string,
    value2: string,
    value3: string,
    value4: BigInt
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set("value1", ethereum.Value.fromString(this.value1));
    map.set("value2", ethereum.Value.fromString(this.value2));
    map.set("value3", ethereum.Value.fromString(this.value3));
    map.set("value4", ethereum.Value.fromUnsignedBigInt(this.value4));
    return map;
  }

  getArtist(): Address {
    return this.value0;
  }

  getName(): string {
    return this.value1;
  }

  getImage(): string {
    return this.value2;
  }

  getUri(): string {
    return this.value3;
  }

  getVotes(): BigInt {
    return this.value4;
  }
}

export class RiffianBoard extends ethereum.SmartContract {
  static bind(address: Address): RiffianBoard {
    return new RiffianBoard("RiffianBoard", address);
  }

  agentAddress(param0: Address): Address {
    let result = super.call("agentAddress", "agentAddress(address):(address)", [
      ethereum.Value.fromAddress(param0)
    ]);

    return result[0].toAddress();
  }

  try_agentAddress(param0: Address): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "agentAddress",
      "agentAddress(address):(address)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  agentFeePercents(): BigInt {
    let result = super.call(
      "agentFeePercents",
      "agentFeePercents():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_agentFeePercents(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "agentFeePercents",
      "agentFeePercents():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  boardFeePercents(): BigInt {
    let result = super.call(
      "boardFeePercents",
      "boardFeePercents():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_boardFeePercents(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "boardFeePercents",
      "boardFeePercents():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  calculateSubjectVotePrice(_subject: Bytes): BigInt {
    let result = super.call(
      "calculateSubjectVotePrice",
      "calculateSubjectVotePrice(bytes32):(uint256)",
      [ethereum.Value.fromFixedBytes(_subject)]
    );

    return result[0].toBigInt();
  }

  try_calculateSubjectVotePrice(_subject: Bytes): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "calculateSubjectVotePrice",
      "calculateSubjectVotePrice(bytes32):(uint256)",
      [ethereum.Value.fromFixedBytes(_subject)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  calculateVotePrice(_counter: BigInt): BigInt {
    let result = super.call(
      "calculateVotePrice",
      "calculateVotePrice(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_counter)]
    );

    return result[0].toBigInt();
  }

  try_calculateVotePrice(_counter: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "calculateVotePrice",
      "calculateVotePrice(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_counter)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  claimReward(_week: BigInt): BigInt {
    let result = super.call("claimReward", "claimReward(uint256):(uint256)", [
      ethereum.Value.fromUnsignedBigInt(_week)
    ]);

    return result[0].toBigInt();
  }

  try_claimReward(_week: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "claimReward",
      "claimReward(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_week)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getPrice(_supply: BigInt, _amount: BigInt): BigInt {
    let result = super.call("getPrice", "getPrice(uint256,uint256):(uint256)", [
      ethereum.Value.fromUnsignedBigInt(_supply),
      ethereum.Value.fromUnsignedBigInt(_amount)
    ]);

    return result[0].toBigInt();
  }

  try_getPrice(_supply: BigInt, _amount: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getPrice",
      "getPrice(uint256,uint256):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(_supply),
        ethereum.Value.fromUnsignedBigInt(_amount)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getRetreatPrice(_subject: Bytes, _amount: BigInt): BigInt {
    let result = super.call(
      "getRetreatPrice",
      "getRetreatPrice(bytes32,uint256):(uint256)",
      [
        ethereum.Value.fromFixedBytes(_subject),
        ethereum.Value.fromUnsignedBigInt(_amount)
      ]
    );

    return result[0].toBigInt();
  }

  try_getRetreatPrice(
    _subject: Bytes,
    _amount: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getRetreatPrice",
      "getRetreatPrice(bytes32,uint256):(uint256)",
      [
        ethereum.Value.fromFixedBytes(_subject),
        ethereum.Value.fromUnsignedBigInt(_amount)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getSocials(
    _owner: Address
  ): Array<RiffianBoard__getSocialsResult_socialsStruct> {
    let result = super.call(
      "getSocials",
      "getSocials(address):((string,string,string)[])",
      [ethereum.Value.fromAddress(_owner)]
    );

    return result[0].toTupleArray<
      RiffianBoard__getSocialsResult_socialsStruct
    >();
  }

  try_getSocials(
    _owner: Address
  ): ethereum.CallResult<Array<RiffianBoard__getSocialsResult_socialsStruct>> {
    let result = super.tryCall(
      "getSocials",
      "getSocials(address):((string,string,string)[])",
      [ethereum.Value.fromAddress(_owner)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTupleArray<RiffianBoard__getSocialsResult_socialsStruct>()
    );
  }

  getVotePrice(_subject: Bytes, _amount: BigInt): BigInt {
    let result = super.call(
      "getVotePrice",
      "getVotePrice(bytes32,uint256):(uint256)",
      [
        ethereum.Value.fromFixedBytes(_subject),
        ethereum.Value.fromUnsignedBigInt(_amount)
      ]
    );

    return result[0].toBigInt();
  }

  try_getVotePrice(
    _subject: Bytes,
    _amount: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getVotePrice",
      "getVotePrice(bytes32,uint256):(uint256)",
      [
        ethereum.Value.fromFixedBytes(_subject),
        ethereum.Value.fromUnsignedBigInt(_amount)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getVotePriceWithFee(
    _subject: Bytes,
    _amount: BigInt
  ): RiffianBoard__getVotePriceWithFeeResult {
    let result = super.call(
      "getVotePriceWithFee",
      "getVotePriceWithFee(bytes32,uint256):(uint256,uint256,uint256,uint256,uint256,uint256)",
      [
        ethereum.Value.fromFixedBytes(_subject),
        ethereum.Value.fromUnsignedBigInt(_amount)
      ]
    );

    return new RiffianBoard__getVotePriceWithFeeResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
      result[2].toBigInt(),
      result[3].toBigInt(),
      result[4].toBigInt(),
      result[5].toBigInt()
    );
  }

  try_getVotePriceWithFee(
    _subject: Bytes,
    _amount: BigInt
  ): ethereum.CallResult<RiffianBoard__getVotePriceWithFeeResult> {
    let result = super.tryCall(
      "getVotePriceWithFee",
      "getVotePriceWithFee(bytes32,uint256):(uint256,uint256,uint256,uint256,uint256,uint256)",
      [
        ethereum.Value.fromFixedBytes(_subject),
        ethereum.Value.fromUnsignedBigInt(_amount)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new RiffianBoard__getVotePriceWithFeeResult(
        value[0].toBigInt(),
        value[1].toBigInt(),
        value[2].toBigInt(),
        value[3].toBigInt(),
        value[4].toBigInt(),
        value[5].toBigInt()
      )
    );
  }

  getWeek(): BigInt {
    let result = super.call("getWeek", "getWeek():(uint256)", []);

    return result[0].toBigInt();
  }

  try_getWeek(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("getWeek", "getWeek():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  guardian(): Address {
    let result = super.call("guardian", "guardian():(address)", []);

    return result[0].toAddress();
  }

  try_guardian(): ethereum.CallResult<Address> {
    let result = super.tryCall("guardian", "guardian():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  newSubject(_name: string, _image: string, _uri: string): Bytes {
    let result = super.call(
      "newSubject",
      "newSubject(string,string,string):(bytes32)",
      [
        ethereum.Value.fromString(_name),
        ethereum.Value.fromString(_image),
        ethereum.Value.fromString(_uri)
      ]
    );

    return result[0].toBytes();
  }

  try_newSubject(
    _name: string,
    _image: string,
    _uri: string
  ): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "newSubject",
      "newSubject(string,string,string):(bytes32)",
      [
        ethereum.Value.fromString(_name),
        ethereum.Value.fromString(_image),
        ethereum.Value.fromString(_uri)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  protocolFeeDestination(): Address {
    let result = super.call(
      "protocolFeeDestination",
      "protocolFeeDestination():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_protocolFeeDestination(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "protocolFeeDestination",
      "protocolFeeDestination():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  protocolFeePercents(): BigInt {
    let result = super.call(
      "protocolFeePercents",
      "protocolFeePercents():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_protocolFeePercents(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "protocolFeePercents",
      "protocolFeePercents():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  socialPlatform(
    param0: Address,
    param1: Bytes
  ): RiffianBoard__socialPlatformResult {
    let result = super.call(
      "socialPlatform",
      "socialPlatform(address,bytes32):(string,string,string)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromFixedBytes(param1)
      ]
    );

    return new RiffianBoard__socialPlatformResult(
      result[0].toString(),
      result[1].toString(),
      result[2].toString()
    );
  }

  try_socialPlatform(
    param0: Address,
    param1: Bytes
  ): ethereum.CallResult<RiffianBoard__socialPlatformResult> {
    let result = super.tryCall(
      "socialPlatform",
      "socialPlatform(address,bytes32):(string,string,string)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromFixedBytes(param1)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new RiffianBoard__socialPlatformResult(
        value[0].toString(),
        value[1].toString(),
        value[2].toString()
      )
    );
  }

  startTimeStamp(): BigInt {
    let result = super.call("startTimeStamp", "startTimeStamp():(uint256)", []);

    return result[0].toBigInt();
  }

  try_startTimeStamp(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "startTimeStamp",
      "startTimeStamp():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  subjectFeePercents(): BigInt {
    let result = super.call(
      "subjectFeePercents",
      "subjectFeePercents():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_subjectFeePercents(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "subjectFeePercents",
      "subjectFeePercents():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  subjectToData(param0: Bytes): RiffianBoard__subjectToDataResult {
    let result = super.call(
      "subjectToData",
      "subjectToData(bytes32):(address,string,string,string,uint256)",
      [ethereum.Value.fromFixedBytes(param0)]
    );

    return new RiffianBoard__subjectToDataResult(
      result[0].toAddress(),
      result[1].toString(),
      result[2].toString(),
      result[3].toString(),
      result[4].toBigInt()
    );
  }

  try_subjectToData(
    param0: Bytes
  ): ethereum.CallResult<RiffianBoard__subjectToDataResult> {
    let result = super.tryCall(
      "subjectToData",
      "subjectToData(bytes32):(address,string,string,string,uint256)",
      [ethereum.Value.fromFixedBytes(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new RiffianBoard__subjectToDataResult(
        value[0].toAddress(),
        value[1].toString(),
        value[2].toString(),
        value[3].toString(),
        value[4].toBigInt()
      )
    );
  }

  subjectsList(param0: BigInt): Bytes {
    let result = super.call("subjectsList", "subjectsList(uint256):(bytes32)", [
      ethereum.Value.fromUnsignedBigInt(param0)
    ]);

    return result[0].toBytes();
  }

  try_subjectsList(param0: BigInt): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "subjectsList",
      "subjectsList(uint256):(bytes32)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  userSubjectVotes(param0: Bytes, param1: Address): BigInt {
    let result = super.call(
      "userSubjectVotes",
      "userSubjectVotes(bytes32,address):(uint256)",
      [
        ethereum.Value.fromFixedBytes(param0),
        ethereum.Value.fromAddress(param1)
      ]
    );

    return result[0].toBigInt();
  }

  try_userSubjectVotes(
    param0: Bytes,
    param1: Address
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "userSubjectVotes",
      "userSubjectVotes(bytes32,address):(uint256)",
      [
        ethereum.Value.fromFixedBytes(param0),
        ethereum.Value.fromAddress(param1)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  userWeeklyVotes(param0: Address, param1: BigInt): BigInt {
    let result = super.call(
      "userWeeklyVotes",
      "userWeeklyVotes(address,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );

    return result[0].toBigInt();
  }

  try_userWeeklyVotes(
    param0: Address,
    param1: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "userWeeklyVotes",
      "userWeeklyVotes(address,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  weeklyReward(param0: BigInt): BigInt {
    let result = super.call("weeklyReward", "weeklyReward(uint256):(uint256)", [
      ethereum.Value.fromUnsignedBigInt(param0)
    ]);

    return result[0].toBigInt();
  }

  try_weeklyReward(param0: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "weeklyReward",
      "weeklyReward(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  weeklyRewardClaimed(param0: BigInt, param1: Address): BigInt {
    let result = super.call(
      "weeklyRewardClaimed",
      "weeklyRewardClaimed(uint256,address):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(param0),
        ethereum.Value.fromAddress(param1)
      ]
    );

    return result[0].toBigInt();
  }

  try_weeklyRewardClaimed(
    param0: BigInt,
    param1: Address
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "weeklyRewardClaimed",
      "weeklyRewardClaimed(uint256,address):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(param0),
        ethereum.Value.fromAddress(param1)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  weeklyVotes(param0: BigInt): BigInt {
    let result = super.call("weeklyVotes", "weeklyVotes(uint256):(uint256)", [
      ethereum.Value.fromUnsignedBigInt(param0)
    ]);

    return result[0].toBigInt();
  }

  try_weeklyVotes(param0: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "weeklyVotes",
      "weeklyVotes(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }
}

export class BindAgentCall extends ethereum.Call {
  get inputs(): BindAgentCall__Inputs {
    return new BindAgentCall__Inputs(this);
  }

  get outputs(): BindAgentCall__Outputs {
    return new BindAgentCall__Outputs(this);
  }
}

export class BindAgentCall__Inputs {
  _call: BindAgentCall;

  constructor(call: BindAgentCall) {
    this._call = call;
  }

  get _agent(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _checksum(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }
}

export class BindAgentCall__Outputs {
  _call: BindAgentCall;

  constructor(call: BindAgentCall) {
    this._call = call;
  }
}

export class BindSocialCall extends ethereum.Call {
  get inputs(): BindSocialCall__Inputs {
    return new BindSocialCall__Inputs(this);
  }

  get outputs(): BindSocialCall__Outputs {
    return new BindSocialCall__Outputs(this);
  }
}

export class BindSocialCall__Inputs {
  _call: BindSocialCall;

  constructor(call: BindSocialCall) {
    this._call = call;
  }

  get _platform(): string {
    return this._call.inputValues[0].value.toString();
  }

  get _id(): string {
    return this._call.inputValues[1].value.toString();
  }

  get _uri(): string {
    return this._call.inputValues[2].value.toString();
  }
}

export class BindSocialCall__Outputs {
  _call: BindSocialCall;

  constructor(call: BindSocialCall) {
    this._call = call;
  }
}

export class ClaimRewardCall extends ethereum.Call {
  get inputs(): ClaimRewardCall__Inputs {
    return new ClaimRewardCall__Inputs(this);
  }

  get outputs(): ClaimRewardCall__Outputs {
    return new ClaimRewardCall__Outputs(this);
  }
}

export class ClaimRewardCall__Inputs {
  _call: ClaimRewardCall;

  constructor(call: ClaimRewardCall) {
    this._call = call;
  }

  get _week(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class ClaimRewardCall__Outputs {
  _call: ClaimRewardCall;

  constructor(call: ClaimRewardCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class InitializeCall extends ethereum.Call {
  get inputs(): InitializeCall__Inputs {
    return new InitializeCall__Inputs(this);
  }

  get outputs(): InitializeCall__Outputs {
    return new InitializeCall__Outputs(this);
  }
}

export class InitializeCall__Inputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }

  get _feeDestination(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _startTimeStamp(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class InitializeCall__Outputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class NewSubjectCall extends ethereum.Call {
  get inputs(): NewSubjectCall__Inputs {
    return new NewSubjectCall__Inputs(this);
  }

  get outputs(): NewSubjectCall__Outputs {
    return new NewSubjectCall__Outputs(this);
  }
}

export class NewSubjectCall__Inputs {
  _call: NewSubjectCall;

  constructor(call: NewSubjectCall) {
    this._call = call;
  }

  get _name(): string {
    return this._call.inputValues[0].value.toString();
  }

  get _image(): string {
    return this._call.inputValues[1].value.toString();
  }

  get _uri(): string {
    return this._call.inputValues[2].value.toString();
  }
}

export class NewSubjectCall__Outputs {
  _call: NewSubjectCall;

  constructor(call: NewSubjectCall) {
    this._call = call;
  }

  get value0(): Bytes {
    return this._call.outputValues[0].value.toBytes();
  }
}

export class PauseVoteCall extends ethereum.Call {
  get inputs(): PauseVoteCall__Inputs {
    return new PauseVoteCall__Inputs(this);
  }

  get outputs(): PauseVoteCall__Outputs {
    return new PauseVoteCall__Outputs(this);
  }
}

export class PauseVoteCall__Inputs {
  _call: PauseVoteCall;

  constructor(call: PauseVoteCall) {
    this._call = call;
  }
}

export class PauseVoteCall__Outputs {
  _call: PauseVoteCall;

  constructor(call: PauseVoteCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RetreatCall extends ethereum.Call {
  get inputs(): RetreatCall__Inputs {
    return new RetreatCall__Inputs(this);
  }

  get outputs(): RetreatCall__Outputs {
    return new RetreatCall__Outputs(this);
  }
}

export class RetreatCall__Inputs {
  _call: RetreatCall;

  constructor(call: RetreatCall) {
    this._call = call;
  }

  get _subject(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get _amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class RetreatCall__Outputs {
  _call: RetreatCall;

  constructor(call: RetreatCall) {
    this._call = call;
  }
}

export class SetFeeDestinationCall extends ethereum.Call {
  get inputs(): SetFeeDestinationCall__Inputs {
    return new SetFeeDestinationCall__Inputs(this);
  }

  get outputs(): SetFeeDestinationCall__Outputs {
    return new SetFeeDestinationCall__Outputs(this);
  }
}

export class SetFeeDestinationCall__Inputs {
  _call: SetFeeDestinationCall;

  constructor(call: SetFeeDestinationCall) {
    this._call = call;
  }

  get _feeDestination(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetFeeDestinationCall__Outputs {
  _call: SetFeeDestinationCall;

  constructor(call: SetFeeDestinationCall) {
    this._call = call;
  }
}

export class SetRewardDistributionCall extends ethereum.Call {
  get inputs(): SetRewardDistributionCall__Inputs {
    return new SetRewardDistributionCall__Inputs(this);
  }

  get outputs(): SetRewardDistributionCall__Outputs {
    return new SetRewardDistributionCall__Outputs(this);
  }
}

export class SetRewardDistributionCall__Inputs {
  _call: SetRewardDistributionCall;

  constructor(call: SetRewardDistributionCall) {
    this._call = call;
  }

  get _protocol(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _subject(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _agent(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _board(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }
}

export class SetRewardDistributionCall__Outputs {
  _call: SetRewardDistributionCall;

  constructor(call: SetRewardDistributionCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class UnbindSocialCall extends ethereum.Call {
  get inputs(): UnbindSocialCall__Inputs {
    return new UnbindSocialCall__Inputs(this);
  }

  get outputs(): UnbindSocialCall__Outputs {
    return new UnbindSocialCall__Outputs(this);
  }
}

export class UnbindSocialCall__Inputs {
  _call: UnbindSocialCall;

  constructor(call: UnbindSocialCall) {
    this._call = call;
  }

  get _platform(): string {
    return this._call.inputValues[0].value.toString();
  }
}

export class UnbindSocialCall__Outputs {
  _call: UnbindSocialCall;

  constructor(call: UnbindSocialCall) {
    this._call = call;
  }
}

export class VoteCall extends ethereum.Call {
  get inputs(): VoteCall__Inputs {
    return new VoteCall__Inputs(this);
  }

  get outputs(): VoteCall__Outputs {
    return new VoteCall__Outputs(this);
  }
}

export class VoteCall__Inputs {
  _call: VoteCall;

  constructor(call: VoteCall) {
    this._call = call;
  }

  get _subject(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get _amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class VoteCall__Outputs {
  _call: VoteCall;

  constructor(call: VoteCall) {
    this._call = call;
  }
}
